name: Run Kute Benchmarks in multiple clients

on:
  workflow_dispatch:
    inputs:
      test:
        description: 'Path to test file'
        default: 'tests/req8.txt'
      warmup:
        description: 'Name of the warm up file'
        default: ''
        type: choice
        options:
          - ''
          - warmup/warmup-100bl-16wi-32tx.txt
          - warmup/warmup-1000bl-16wi-24tx.txt
          - warmup/warmup-1000bl-16wi-1000tx.txt
      images:
        description: 'Comma-separated list of images for the clients (type 'default' if you don't want to specify), same order than clients'
        default: 'default'
      client:
        description: 'Comma-separated list of client names (e.g., nethermind,reth,geth,erigon)'
        default: 'nethermind'
        required: true
      runs:
        description: 'Number of runs for the application'
        required: false
        default: 1

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_INSTALL_DIR: "~/.dotnet"
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install python dependencies
        run: pip install -r requirements.txt

      - name: Prepare kute dependencies
        run: make prepare_nethermind

      - name: Create results directory
        run: mkdir results

      - name: Run Node and run benchmarks
        run: |
          IFS=',' read -ra clients <<< "${{ github.event.inputs.client }}"
          IFS=',' read -ra images <<< "${{ github.event.inputs.images }}"
          runs="${{ github.event.inputs.runs }}"
          for i in "${!clients[@]}"; do
            client="${clients[$i]}"
            image="${images[$i]}"
            if [ -z "$image" ]; then
              echo "Image input is empty, using default image."
              python setup_node.py --client $client
            else
              echo "Using provided image: $image for $client"
              python setup_node.py --client $client --image $image
            fi
            if [ -z "${{ github.event.inputs.warmup}}" ]; then
              echo "Running script without warm up."
              python3 run_kute.py --output results --testsPath ${{ github.event.inputs.test }} --jwtPath /tmp/jwtsecret --client $client --runs $runs
            else
              echo "Using provided warm up file: ${{ github.event.inputs.warmup }}"
              python3 run_kute.py --output results --testsPath ${{ github.event.inputs.test }} --jwtPath /tmp/jwtsecret --warmupPath ${{ github.event.inputs.warmup }} --client $client --runs $runs
            fi
            cd "scripts/$client"
            docker-compose down
            cd ../..
          done

      - name: Zip the results folder
        run: zip -r results.zip results

      - name: Upload results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: results.zip
